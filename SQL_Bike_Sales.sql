Create database Bikes;

use bikes;

select * from sales;

# Retrieve the total number of records in the dataset.
select count(*) as Total_Records from sales;

# Find the total quantity and total sale for each order.
 select order_number , sum(quantity) as Total_Quantity , sum(total) as Total_Sales from sales group by order_number;
 
 # Identify the average unit price across all orders.
 select round(avg(unit_price)) as avg_unit_price from sales;
 
 # Count the number of orders for each client type (Retail, Wholesale).
 select client_type,count(order_number) as Orders from sales group by client_type;
 
 # Calculate the total sales for each client type.
 select client_type,round(sum(total)) as Total_Sales from sales group by client_type;
 
 # Determine the most sold product line.
 select product_line , count(*) as no_of_times_product_sold from sales group by product_line;
 
 # Find the total Sales generated by each product line.
select product_line , round(sum(total)) as Total_Sales from sales group by product_line order by Total_Sales desc;

# Count the number of orders for each payment type (Cash, Credit card, Transfer).
select payment,count(*) as number_of_orders from sales group by payment;

# Calculate the total sales for each payment type.
select payment,round(sum(total)) as Total_Sales from sales group by payment;

# Identify the average payment fee.
select round(avg(payment_fee),2) as average_payment_fee from sales;

# Determine the total sales for each date.
select date ,round(sum(total)) as total_sales from sales group by date;

# Monthly Sales Trend:
select CONCAT(extract(year from date),"-",extract(month from date)) as monthly ,round(sum(total)) as total_sales from sales group by monthly;

# Find the date with the highest total sales.
select date,product_line,total as max_sales from sales where total=(select max(total) from sales);

# Count the number of orders for each warehouse.
select warehouse,count(*) as Total_orders from sales group by warehouse;

# Calculate the total sales for each warehouse.
select warehouse,round(sum(total)) as Total_Sales from sales group by warehouse;

# Calculate the average order value (total sales divided by the number of orders)
select round(sum(total)/count(distinct order_number)) as avg_order_value from sales;
select round(avg(total)) from sales; # both works same because each and every row is unique order placed.

# Identify the product with the highest unit price.
select product_line,total from sales where total=(select max(total) from sales );

# Determine the client type that has the highest total quantity.
 select client_type,sum(quantity) as Total_Quantity from sales group by client_type;
 
 # Identify the payment type with the highest average payment fee.
 select payment,round(avg(payment_fee),2) as avg_payment_fee from sales group by payment order by avg_payment_fee desc;
 
 # Top 5 Product on Sales
 select product_line,round(sum(total)) as Sales from sales group by product_line order by Sales desc limit 5;
 